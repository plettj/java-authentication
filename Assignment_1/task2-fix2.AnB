Protocol: task2

# hm is server handling both shared secret keys
# ck and sk are two functions that produce different shared secret keys
Types: Agent A,B,hm;
       Number X,Y,g,M;
       Function ck,sk

Knowledge: A: A,B,hm,ck(A,hm),sk(A,hm),g;
	   B: A,B,hm,ck(B,hm),sk(B,hm),g;
	   hm: A,B,hm,ck(A,hm),sk(A,hm),ck(B,hm),sk(B,hm),g

# A sends to B a symmetric encrypted message that it has with hm.
# B then sends the message to hm along with his g^Y which is encrypte symmetric with hm

# SOLUTION:
# We initially were sending plain text data, which allowed the possibility for an intruder
#      to alter the information sent between A and B. However, by removing the plain text
#      and instead just communicating through encryped text, we resolve this issue. Basically,
#      we will be using hm as the middle man to faciliate communication and only send encrypted
#      messages to hm who will then decrypt it and send a new encryption of the text to the receiver
#      with their corresponding key.

Actions:
A->B: A,B,exp(g,X),{|A,B,exp(g,X)|}ck(A,hm)
B->hm: {|A,B,exp(g,X),exp(g,Y),
         {|A,B,exp(g,X)|}ck(A,hm)|}ck(B,hm)
hm->B: {|B,A,exp(g,X),{|B,A,exp(g,X),exp(g,Y)|}sk(A,hm)|}sk(B,hm)
B->A: exp(g,Y),{|B,A,exp(g,X),exp(g,Y)|}sk(A,hm)
A->B: {|M|}exp(exp(g,X),Y)

# B authenticates A on M -> B will verify identity of A by checking that they know M
# M secret between A,B -> only A and B know the true value of M
Goals:
B authenticates A on M
M secret between A,B




#A->B:  A,B,exp(g,X),{|A,B,exp(g,X)|}ck(A,hm)
#B->hm: {|A,B,exp(g,X),exp(g,Y),
#         {|A,B,exp(g,X)|}ck(A,hm)|}ck(B,hm)
#hm->B: {|B,A,{|B,A,exp(g,X),exp(g,Y)|}sk(A,hm)|}sk(B,hm)
#B->A: exp(g,Y),{|B,A,exp(g,X),exp(g,Y)|}sk(A,hm)
#A->B: {|M|}exp(exp(g,X),Y)